<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picClose.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DwAACw8BkvkDpQAAA2VJREFUaEPtWc1u00AQXoFdGg5ITdal5e8tqODAA/AAVasigQTiwBOAuHBruLdV
        qbhxgqA4VQtcOCCOVFxA8AClnKDhTGlSM589Fo47TtY/cYuUT/qkJN6d+cbenR1P1AgjjJAfDaVOutbk
        1ZalHxKbruV8dW3nV8t2/oD47Fr6C65hTNOavPJIqRM8/ejQGp+46Nr6MQn+TkK9VLScnZat681K9QKb
        Kw8NNeWQiDXiXo+obCQbenVDTWs2P1y07NoCOW3HRBRAvdu09Ty7KR5rStm0VJ7Kzosj7Zcn8MVuiwE9
        3tNk/E3c2bBIQbyGT3afD7gbZLQ08SEpObyl7DbGMrKjjGWTTL3KMrKhadduyIbLpJ5jOengqnM1eow/
        ZaOlsp0pxdJE5HnJYOmkG7nCssyA05EmGh9S66fOeu+vXRevScRYzJGuJXBvY3ziEssbDJQHghGRELL9
        7Ll30Ol4H2/dE8dEuTV/xzvY3/d2XrjeemVaHCNT11lef6DICuoUyUgvQ/EhBgURig+RJgjUWygaWWYy
        /KpSMCARSyEqCMD3rYW7h8biN2lsmqXnWtUZlpkMvyQWJifxw9ztw8JiTyJ+5wF/zM3BSy5KegoPWGYy
        qG53pcn92C+IosSDpO0ly0yG/+IhTB5EMYhu1xcbRVbxIGn7zDKTQQMzl8pSEFHkEQ/iYGWZyaCBuV5S
        /CA6XZb8D3gaecSDFMBvlpkMGpgrAH/Nx5YN4AdgcE70o2kAmZeQtGGj8JdQjiCMllDWTSxmG38T9y6n
        PEEYbWIalDqN9kuVJueEKUnb4DSa9iAzyfOFBWE591lmMtB0EicLLLuUaFq1yywzGSjm6Mj+JhmIUyzm
        +qTK+JPwi7nxKXFsnKRp27ibh9JVMiKxp5w2yPNhEGnEB9SLLG8wjtsLDfL/ZqV6nuWZAR0BydjRUC+x
        LHM01JkqDg7ZYJnUu5n7puhVykbLozvmzLKcbECvUjJcDvUyy8iO4M8L3ZIdDJWv3illsYx8QKMVDVfB
        ybC4WVhzN0TQ5C0jM+nlwu68BHIwN5zspH/k3rCm4L7pCg4YWYw5Axt6CWmbzZcHnI7kvG5aO0UZzNGL
        qU/YYSAoAKsz6NugZseLB4nEmx3KEbBNv33CNZTEqCqPxd+sI4zw30Opv5ozLBl7vfnOAAAAAElFTkSu
        QmCC
</value>
  </data>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>25</value>
  </metadata>
</root>